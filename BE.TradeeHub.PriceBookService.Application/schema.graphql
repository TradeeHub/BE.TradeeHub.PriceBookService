schema {
  query: Query
  mutation: Mutation
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type AdditionalServiceCostEntity {
  name: String!
  description: String
  cost: Decimal!
  taxRateType: TaxRateType
  taxRateId: ID
  taxRate: TaxRateEntity
}

type ImageEntity {
  creator: UserEntity!
  modifier: UserEntity
  url: String!
  s3Key: String!
  name: String!
  byteSize: Long
  contentType: String
  description: String
  createdAt: DateTime!
  createdBy: UUID!
  modifiedAt: DateTime
  modifiedBy: UUID
}

type LaborRateEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  name: String!
  description: String
  rateType: String
  cost: Decimal!
  price: Decimal!
  serviceIds: [ID!]
  pricingTiers: [PricingTierEntity!]
  userOwnerId: UUID!
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
  services: [ServiceEntity!]!
}

type MarkupEntity {
  type: MarkupType!
  value: Decimal!
}

type MaterialEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  serviceIds: [ID!]
  name: String!
  description: String
  identifier: String
  markup: MarkupEntity
  cost: Decimal!
  price: Decimal!
  unitType: String!
  images: [ImageEntity!]
  onlineMaterialUrls: [String!]
  pricingTiers: [PricingTierEntity!]
  userOwnerId: UUID!
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
  services: [ServiceEntity!]!
}

type Mutation {
  addNewServiceCategory(request: AddNewServiceCategoryRequestInput!): ServiceCategoryEntity!
  addLaborRate(request: AddLaborRateRequestInput!): LaborRateEntity!
  addService(request: AddServiceRequestInput!): ServiceEntity!
  addServiceBundle(request: AddServiceBundleRequestInput!): ServiceBundleEntity!
  addMaterial(request: AddMaterialRequestInput!): MaterialEntity!
  addTaxRate(request: AddTaxRateRequestInput!): TaxRateEntity!
  addWarranty(request: AddWarrantyRequestInput!): WarrantyEntity!
}

"Information about pagination in a connection."
type PageInfo {
  "Indicates whether more edges exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more edges exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
  "When paginating backwards, the cursor to continue."
  startCursor: String
  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type PricingTierEntity {
  unitRange: RangeOfDecimal!
  cost: Decimal
  price: Decimal!
}

type Query {
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]!
  serviceCategories("Returns the first _n_ elements from the list." first: Int "Returns the elements in the list that come after the specified cursor." after: String "Returns the last _n_ elements from the list." last: Int "Returns the elements in the list that come before the specified cursor." before: String order_by: ServiceCategoryEntitySort where: ServiceCategoryEntityFilter): ServiceCategoriesConnection @authorize
  service(id: ID!): ServiceEntity
  serviceCategory(id: ID!): ServiceCategoryEntity
  laborRate(id: ID!): LaborRateEntity
  serviceBundle(id: ID!): ServiceBundleEntity
  material(id: ID!): MaterialEntity
  warranty(id: ID!): WarrantyEntity
  taxRate(id: ID!): TaxRateEntity
}

type RangeOfDecimal {
  overlaps(other: RangeOfDecimalInput): Boolean!
  max: Decimal!
  min: Decimal!
}

type RangeTierUnitEntity {
  quantity: Decimal!
  range: RangeOfDecimal!
}

type ServiceBundleEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  serviceId: ID!
  name: String!
  unit: Decimal
  unitType: String
  serviceCreationType: ServiceCreationType!
  useCalculatedPrice: Boolean!
  duration: ServiceDurationEntity
  cost: Decimal!
  price: Decimal!
  description: String
  images: [ImageEntity!]
  allowOnlineBooking: Boolean!
  serviceCategoryId: ID!
  materials: [ServiceMaterialEntity!]
  laborRates: [ServiceLabourEntity!]
  markup: MarkupEntity
  additionalCosts: [AdditionalServiceCostEntity!]
  warrantyIds: [ID!]
  userOwnerId: UUID!
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
  service: ServiceEntity
  warranties: [WarrantyEntity!]!
  taxRate: TaxRateEntity
  serviceCategory: ServiceCategoryEntity
}

"A connection to a list of items."
type ServiceCategoriesConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!
  "A list of edges."
  edges: [ServiceCategoriesEdge!]
  "A flattened list of the nodes."
  nodes: [ServiceCategoryEntity!]
}

"An edge in a connection."
type ServiceCategoriesEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: ServiceCategoryEntity!
}

type ServiceCategoryEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  parentServiceCategoryId: ID
  name: String!
  description: String
  images: [ImageEntity!]
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
  parentServiceCategory: ServiceCategoryEntity
  services: [ServiceEntity!]!
  serviceCategories: [ServiceCategoryEntity!]!
}

type ServiceDurationEntity {
  type: DurationType!
  durationRangeFrom: Decimal!
  durationRangeTo: Decimal
  ratio: Decimal
  ranges: [RangeTierUnitEntity!]
}

type ServiceEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  name: String!
  unit: Decimal
  unitType: String
  serviceCreationType: ServiceCreationType!
  useCalculatedPrice: Boolean!
  duration: ServiceDurationEntity
  cost: Decimal!
  price: Decimal!
  description: String
  images: [ImageEntity!]
  allowOnlineBooking: Boolean!
  materials: [ServiceMaterialEntity!]
  laborRates: [ServiceLabourEntity!]
  markup: MarkupEntity
  additionalCosts: [AdditionalServiceCostEntity!]
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
  warranties: [WarrantyEntity!]!
  bundles: [ServiceBundleEntity!]!
  taxRate: TaxRateEntity
  serviceCategory: ServiceCategoryEntity
}

type ServiceLabourEntity {
  quantity: Decimal
  ratio: Decimal
  ranges: [RangeTierUnitEntity!]
  laborRate: LaborRateEntity
}

type ServiceMaterialEntity {
  quantity: Decimal
  ratio: Decimal
  ranges: [RangeTierUnitEntity!]
  material: MaterialEntity
}

type TaxRateEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  name: String!
  description: String
  percentageRate: Decimal!
  userOwnerId: UUID!
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
}

type UserEntity implements Node {
  id: ID!
}

type WarrantyDurationEntity {
  durationType: WarrantyDurationType!
  duration: Int!
}

type WarrantyEntity implements Node {
  owner: UserEntity!
  creator: UserEntity!
  modifier: UserEntity
  id: ID!
  serviceIds: [ID!]
  name: String!
  warrantyType: String
  description: String
  terms: String!
  warrantyDuration: WarrantyDurationEntity!
  price: Decimal
  userOwnerId: UUID!
  createdAt: DateTime!
  createdById: UUID!
  modifiedAt: DateTime
  modifiedById: UUID
}

input AddLaborRateRequestInput {
  name: String!
  description: String
  rateType: String
  cost: Decimal!
  price: Decimal!
  serviceIds: [ID!]
  pricingTiers: [PricingTierRequestInput!]
}

input AddMaterialRequestInput {
  name: String!
  serviceIds: [ID!]
  description: String
  identifier: String
  markup: MarkupEntityInput
  cost: Decimal!
  price: Decimal!
  unitType: String!
  images: [Upload!]
  onlineMaterialUrls: [String!]
  pricingTiers: [PricingTierEntityInput!]
}

input AddNewServiceCategoryRequestInput {
  parentServiceCategoryId: ID
  name: String!
  description: String
  images: [Upload!]
}

input AddServiceBundleRequestInput {
  serviceId: ID!
  name: String!
  unit: Decimal
  unitType: String
  serviceCreationType: ServiceCreationType!
  useCalculatedPrice: Boolean!
  duration: ServiceDurationRequestInput
  cost: Decimal!
  price: Decimal!
  description: String
  images: [Upload!]
  allowOnlineBooking: Boolean!
  serviceCategoryId: ID!
  materials: [ServiceMaterialRequestInput!]
  laborRates: [ServiceLabourRequestInput!]
  taxRateId: ID!
  markup: MarkupRequestInput
  additionalCosts: [AdditionalServiceCostRequestInput!]
  warrantyIds: [ID!]
}

input AddServiceRequestInput {
  name: String!
  unit: Decimal
  unitType: String
  serviceCreationType: ServiceCreationType!
  useCalculatedPrice: Boolean!
  duration: ServiceDurationRequestInput
  cost: Decimal!
  price: Decimal!
  description: String
  images: [Upload!]
  allowOnlineBooking: Boolean!
  serviceCategoryId: ID!
  materials: [ServiceMaterialRequestInput!]
  laborRates: [ServiceLabourRequestInput!]
  taxRateId: ID!
  markup: MarkupRequestInput
  additionalCosts: [AdditionalServiceCostRequestInput!]
  warrantyIds: [ID!]
}

input AddTaxRateRequestInput {
  name: String!
  description: String
  percentageRate: Decimal!
}

input AddWarrantyRequestInput {
  serviceIds: [ID!]
  name: String!
  warrantyType: String
  description: String
  terms: String!
  warrantyDuration: WarrantyDurationRequestInput!
  price: Decimal
}

input AdditionalServiceCostRequestInput {
  name: String!
  description: String
  cost: Decimal!
  taxRateType: TaxRateType
  taxRateId: ID
}

input ImageEntityFilter {
  AND: [ImageEntityFilter!]
  OR: [ImageEntityFilter!]
  url: String
  url_not: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  url_in: [String!]
  url_not_in: [String!]
  s3Key: String
  s3Key_not: String
  s3Key_contains: String
  s3Key_not_contains: String
  s3Key_starts_with: String
  s3Key_not_starts_with: String
  s3Key_ends_with: String
  s3Key_not_ends_with: String
  s3Key_in: [String!]
  s3Key_not_in: [String!]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  byteSize: Long
  byteSize_not: Long
  byteSize_in: [Long]
  byteSize_not_in: [Long]
  byteSize_gt: Long
  byteSize_not_gt: Long
  byteSize_gte: Long
  byteSize_not_gte: Long
  byteSize_lt: Long
  byteSize_not_lt: Long
  byteSize_lte: Long
  byteSize_not_lte: Long
  contentType: String
  contentType_not: String
  contentType_contains: String
  contentType_not_contains: String
  contentType_starts_with: String
  contentType_not_starts_with: String
  contentType_ends_with: String
  contentType_not_ends_with: String
  contentType_in: [String]
  contentType_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_in: [String]
  description_not_in: [String]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_gt: DateTime
  createdAt_not_gt: DateTime
  createdAt_gte: DateTime
  createdAt_not_gte: DateTime
  createdAt_lt: DateTime
  createdAt_not_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not_lte: DateTime
  createdBy: UUID
  createdBy_not: UUID
  createdBy_in: [UUID!]
  createdBy_not_in: [UUID!]
  createdBy_gt: UUID
  createdBy_not_gt: UUID
  createdBy_gte: UUID
  createdBy_not_gte: UUID
  createdBy_lt: UUID
  createdBy_not_lt: UUID
  createdBy_lte: UUID
  createdBy_not_lte: UUID
  modifiedAt: DateTime
  modifiedAt_not: DateTime
  modifiedAt_in: [DateTime]
  modifiedAt_not_in: [DateTime]
  modifiedAt_gt: DateTime
  modifiedAt_not_gt: DateTime
  modifiedAt_gte: DateTime
  modifiedAt_not_gte: DateTime
  modifiedAt_lt: DateTime
  modifiedAt_not_lt: DateTime
  modifiedAt_lte: DateTime
  modifiedAt_not_lte: DateTime
  modifiedBy: UUID
  modifiedBy_not: UUID
  modifiedBy_in: [UUID]
  modifiedBy_not_in: [UUID]
  modifiedBy_gt: UUID
  modifiedBy_not_gt: UUID
  modifiedBy_gte: UUID
  modifiedBy_not_gte: UUID
  modifiedBy_lt: UUID
  modifiedBy_not_lt: UUID
  modifiedBy_lte: UUID
  modifiedBy_not_lte: UUID
}

input MarkupEntityInput {
  type: MarkupType!
  value: Decimal!
}

input MarkupRequestInput {
  type: MarkupType!
  value: Decimal!
}

input ObjectIdFilter {
  AND: [ObjectIdFilter!]
  OR: [ObjectIdFilter!]
  timestamp: Int
  timestamp_not: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  timestamp_gt: Int
  timestamp_not_gt: Int
  timestamp_gte: Int
  timestamp_not_gte: Int
  timestamp_lt: Int
  timestamp_not_lt: Int
  timestamp_lte: Int
  timestamp_not_lte: Int
  machine: Int
  machine_not: Int
  machine_in: [Int!]
  machine_not_in: [Int!]
  machine_gt: Int
  machine_not_gt: Int
  machine_gte: Int
  machine_not_gte: Int
  machine_lt: Int
  machine_not_lt: Int
  machine_lte: Int
  machine_not_lte: Int
  pid: Short
  pid_not: Short
  pid_in: [Short!]
  pid_not_in: [Short!]
  pid_gt: Short
  pid_not_gt: Short
  pid_gte: Short
  pid_not_gte: Short
  pid_lt: Short
  pid_not_lt: Short
  pid_lte: Short
  pid_not_lte: Short
  increment: Int
  increment_not: Int
  increment_in: [Int!]
  increment_not_in: [Int!]
  increment_gt: Int
  increment_not_gt: Int
  increment_gte: Int
  increment_not_gte: Int
  increment_lt: Int
  increment_not_lt: Int
  increment_lte: Int
  increment_not_lte: Int
  creationTime: DateTime
  creationTime_not: DateTime
  creationTime_in: [DateTime!]
  creationTime_not_in: [DateTime!]
  creationTime_gt: DateTime
  creationTime_not_gt: DateTime
  creationTime_gte: DateTime
  creationTime_not_gte: DateTime
  creationTime_lt: DateTime
  creationTime_not_lt: DateTime
  creationTime_lte: DateTime
  creationTime_not_lte: DateTime
}

input PricingTierEntityInput {
  unitRange: RangeOfDecimalInput!
  cost: Decimal
  price: Decimal!
}

input PricingTierRequestInput {
  unitRange: RangeOfDecimalInput!
  cost: Decimal
  price: Decimal!
}

input RangeOfDecimalInput {
  max: Decimal!
  min: Decimal!
}

input RangeTierUnitRequestInput {
  quantity: Decimal!
  range: RangeOfDecimalInput!
}

input ServiceCategoryEntityFilter {
  AND: [ServiceCategoryEntityFilter!]
  OR: [ServiceCategoryEntityFilter!]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_in: [String]
  description_not_in: [String]
  images_some: ImageEntityFilter
  images_none: ImageEntityFilter
  images_all: ImageEntityFilter
  images_any: Boolean
  serviceCategoryIds_some: ObjectIdFilter
  serviceCategoryIds_none: ObjectIdFilter
  serviceCategoryIds_all: ObjectIdFilter
  serviceCategoryIds_any: Boolean
  serviceIds_some: ObjectIdFilter
  serviceIds_none: ObjectIdFilter
  serviceIds_all: ObjectIdFilter
  serviceIds_any: Boolean
  userOwnerId: UUID
  userOwnerId_not: UUID
  userOwnerId_in: [UUID!]
  userOwnerId_not_in: [UUID!]
  userOwnerId_gt: UUID
  userOwnerId_not_gt: UUID
  userOwnerId_gte: UUID
  userOwnerId_not_gte: UUID
  userOwnerId_lt: UUID
  userOwnerId_not_lt: UUID
  userOwnerId_lte: UUID
  userOwnerId_not_lte: UUID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_gt: DateTime
  createdAt_not_gt: DateTime
  createdAt_gte: DateTime
  createdAt_not_gte: DateTime
  createdAt_lt: DateTime
  createdAt_not_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not_lte: DateTime
  createdById: UUID
  createdById_not: UUID
  createdById_in: [UUID!]
  createdById_not_in: [UUID!]
  createdById_gt: UUID
  createdById_not_gt: UUID
  createdById_gte: UUID
  createdById_not_gte: UUID
  createdById_lt: UUID
  createdById_not_lt: UUID
  createdById_lte: UUID
  createdById_not_lte: UUID
  modifiedAt: DateTime
  modifiedAt_not: DateTime
  modifiedAt_in: [DateTime]
  modifiedAt_not_in: [DateTime]
  modifiedAt_gt: DateTime
  modifiedAt_not_gt: DateTime
  modifiedAt_gte: DateTime
  modifiedAt_not_gte: DateTime
  modifiedAt_lt: DateTime
  modifiedAt_not_lt: DateTime
  modifiedAt_lte: DateTime
  modifiedAt_not_lte: DateTime
  modifiedById: UUID
  modifiedById_not: UUID
  modifiedById_in: [UUID]
  modifiedById_not_in: [UUID]
  modifiedById_gt: UUID
  modifiedById_not_gt: UUID
  modifiedById_gte: UUID
  modifiedById_not_gte: UUID
  modifiedById_lt: UUID
  modifiedById_not_lt: UUID
  modifiedById_lte: UUID
  modifiedById_not_lte: UUID
}

input ServiceCategoryEntitySort {
  name: SortOperationKind
  description: SortOperationKind
  userOwnerId: SortOperationKind
  createdAt: SortOperationKind
  createdById: SortOperationKind
  modifiedAt: SortOperationKind
  modifiedById: SortOperationKind
}

input ServiceDurationRequestInput {
  type: DurationType!
  durationRangeFrom: Decimal!
  durationRangeTo: Decimal
  ratio: Decimal
  ranges: [RangeTierUnitRequestInput!]
}

input ServiceLabourRequestInput {
  labourRateId: ID!
  quantity: Decimal
  ratio: Decimal
  ranges: [RangeTierUnitRequestInput!]
}

input ServiceMaterialRequestInput {
  materialId: ID!
  quantity: Decimal
  ratio: Decimal
  ranges: [RangeTierUnitRequestInput!]
}

input WarrantyDurationRequestInput {
  durationType: WarrantyDurationType!
  duration: Int!
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

enum DurationType {
  MINUTES
  HOURS
  DAYS
  WEEKS
  MONTHS
}

enum MarkupType {
  FIXED
  PERCENTAGE
}

enum ServiceCreationType {
  FIXED
  DYNAMIC
}

enum SortOperationKind {
  ASC
  DESC
}

enum TaxRateType {
  INCLUSIVE
  EXCEPT
  SPECIFIC_RATE
}

enum WarrantyDurationType {
  DAYS
  WEEKS
  MONTHS
  YEARS
  LIFETIME
}

directive @authorize("The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access the annotated resource." roles: [String!] "Defines when when the authorize directive shall be applied.By default the authorize directives are applied during the validation phase." apply: ApplyPolicy! = BEFORE_RESOLVER) repeatable on OBJECT | FIELD_DEFINITION

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")

"The built-in `Decimal` scalar type."
scalar Decimal

"The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1."
scalar Long

"The `Short` scalar type represents non-fractional signed whole 16-bit numeric values. Short can represent values between -(2^15) and 2^15 - 1."
scalar Short

scalar UUID @specifiedBy(url: "https:\/\/tools.ietf.org\/html\/rfc4122")

"The `Upload` scalar type represents a file upload."
scalar Upload